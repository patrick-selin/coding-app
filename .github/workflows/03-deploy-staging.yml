name: Deploy to Staging

on:
  workflow_run:
    workflows: ["Build and Push Production Docker Images"]
    types:
      - completed

jobs:
  deploy-staging:
    name: Deploy Staging Environment
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # infra ylÃ¶s
      # - name: Set up Terraform
      #   uses: hashicorp/setup-terraform@v3
      #   with:
      #     terraform_version: 1.9.7

      # - name: Initialize Terraform
      #   run: terraform init
      #   working-directory: ./terraform

      # - name: Validate Terraform
      #   run: terraform validate
      #   working-directory: ./terraform

      # - name: Plan Terraform Changes
      #   run: terraform plan
      #   working-directory: ./terraform

      # - name: Apply Terraform
      #   run: echo "Apply..!"

      #
      # paivita serveri

      - name: Extract Image SHAs
        id: extract-sha
        run: |
          echo "SERVER_IMAGE=${{ secrets.DOCKERHUB_USERNAME }}/coding-app:server-${{ github.event.workflow_run.outputs.server_image_sha }}" >> $GITHUB_ENV
          echo "FRONTEND_IMAGE=${{ secrets.DOCKERHUB_USERNAME }}/coding-app:client-${{ github.event.workflow_run.outputs.frontend-proxy_image_sha }}" >> $GITHUB_ENV

      - name: Debug Image Variables
        run: |
          echo "SERVER_IMAGE=$SERVER_IMAGE"
          echo "FRONTEND_IMAGE=$FRONTEND_IMAGE"

      - name: Update Docker Compose File
        run: |
          sed -i "s|image:.*server.*|image: $SERVER_IMAGE|g" docker-compose.stag.yml
          sed -i "s|image:.*frontend.*|image: $FRONTEND_IMAGE|g" docker-compose.stag.yml    

      - name: Configure SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.AWS_EC2_SSH_PRIVATE_KEY }}    
        
      - name: Add EC2 to Known Hosts
        run: |
          ssh-keyscan -H ${{ secrets.AWS_EC2_PUBLIC_IP }} >> ~/.ssh/known_hosts    

      - name: Deploy Updated Compose to Staging
        run: |
          scp docker-compose.stag.yml ubuntu@${{ secrets.AWS_EC2_PUBLIC_IP }}:/home/ubuntu/coding-app/docker-compose.stag.yml
          ssh ubuntu@${{ secrets.AWS_EC2_PUBLIC_IP }} "cd /home/ubuntu/coding-app && docker-compose -f docker-compose.stag.yml pull && docker-compose -f docker-compose.stag.yml up --build -d"
    
      - name: Verify Deployment
        run: |
          ssh ubuntu@${{ secrets.AWS_EC2_PUBLIC_IP }} "docker ps"

      # run tests

      # if ok, --> deploy to PROD

      # destroy staging
