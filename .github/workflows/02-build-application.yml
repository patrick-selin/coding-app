name: Build Application

on:
  workflow_run:
    workflows: ["Unit Tests"]
    types:
      - completed

jobs:
  build:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        app: [client, server]
    outputs:
      client_image_sha: ${{ steps.set_output_client.outputs.client_image_sha }}
      server_image_sha: ${{ steps.set_output_server.outputs.server_image_sha }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Cache node modules
        uses: actions/cache@v4
        with:
          path: ${{ matrix.app == 'client' && './client/node_modules' || './server/node_modules' }}
          key: ${{ runner.os }}-${{ matrix.app }}-node-${{ matrix.app == 'client' && hashFiles('client/package-lock.json') || hashFiles('server/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.app }}-node-

      - name: Install dependencies
        run: npm ci
        working-directory: ${{ matrix.app == 'client' && './client' || './server' }}

      - name: Build application
        run: npm run build
        working-directory: ${{ matrix.app == 'client' && './client' || './server' }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push to Docker Hub
        id: build
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.app == 'client' && './client' || './server' }}
          file: ${{ matrix.app == 'client' && './client/Dockerfile.prod' || './server/Dockerfile.prod' }}
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/coding-app:${{ matrix.app }}-${{ github.sha }}
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/coding-app:${{ matrix.app }}-cache
          cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/coding-app:${{ matrix.app }}-cache,mode=max

      
      - name: Set output for client image SHA
        id: set_output_client
        if: ${{ matrix.app == 'client' }}
        run: echo "client_image_sha=${{ github.sha }}" >> $GITHUB_ENV

      - name: Set output for server image SHA
        id: set_output_server
        if: ${{ matrix.app == 'server' }}
        run: echo "server_image_sha=${{ github.sha }}" >> $GITHUB_ENV

  
      - name: Verify SHA Outputs in Build Workflow
        run: |
          echo "Client Image SHA: ${{ steps.set_output_client.outputs.client_image_sha }}"
          echo "Server Image SHA: ${{ steps.set_output_server.outputs.server_image_sha }}"
