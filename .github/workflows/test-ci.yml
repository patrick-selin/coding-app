name: Test-CI

on:
  push:
    branches:
      - main
  # pull_request:
  #   branches: [main]
  #   types: [opened, synchronize]

jobs:
  client-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 3

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Cache node modules
        uses: actions/cache@v4
        with:
          path: ./client/node_modules
          key: ${{ runner.os }}-client-node-${{ hashFiles('client/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-client-node-

      - name: Install frontend dependencies
        run: npm ci
        working-directory: ./client

      - name: Check style/lint
        run: npm run lint
        working-directory: ./client

      - name: Run TypeScript type checks
        run: npm run typecheck
        working-directory: ./client

      - name: Run npm audit
        run: npm audit --audit-level=high
        working-directory: ./client

      - name: Run frontend tests
        run: npm run test
        working-directory: ./client

      - name: Build
        run: npm run build
        working-directory: ./client

      - name: Upload frontend build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: ./client/dist

  server-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 3

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install dependencies
        run: npm install
        working-directory: ./server

      - name: Run tests
        run: npm run test
        working-directory: ./server

  # build-images:
  # runs-on:

  deploy-test-env:
    if: ${{ github.event_name == 'push' }} && github.ref "refs/heads/main"
    runs-on: ubuntu-latest
    needs: [client-tests, server-tests]
    concurrency:
      group: deploy-group
      cancel-in-progress: false

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to testing environment
        run: echo "Deploying to... maybe... testing..!!!"
# deploy: muista download artifacts
# deploy: muista estaa concurrency/cancel-in-progress: false
# jokainen job level: lisaa timeout-minutes: 3
# use matrix starategy?
