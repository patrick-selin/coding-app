# docker-compose.ci.yml
services:
  server:
    container_name: coding-app-server
    build:
      context: ./server
      dockerfile: Dockerfile.dev
    environment:
      NODE_ENV: development
      DATABASE_URL: ${DATABASE_URL}
      TEST_DATABASE_URL: ${TEST_DATABASE_URL}
      POSTGRES_HOST: database-sql
      POSTGRES_PORT: 5432
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: coding-app-db
      SERVER_PORT: 3333
      SERVER_HOST: 0.0.0.0
    volumes:
      - ./server:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      - migrate
      - database-sql
    command: ["npx", "tsx", "watch", "src/index.ts"]

  database-sql:
    container_name: coding-app-postgresql-db
    image: postgres:16.4-bullseye
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./server/src/db/init:/docker-entrypoint-initdb.d
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}

  migrate:
    container_name: coding-app-db-migrate
    build:
      context: ./server
      dockerfile: Dockerfile.dev
    # command: /bin/sh -c "npm run db:migrate:script:test"
    command: /bin/sh -c "npm run db:migrate:script:test && npm run db:migrate:script"
    depends_on:
      - database-sql
    environment:
      NODE_ENV: test
      POSTGRES_HOST: database-sql
      POSTGRES_PORT: 5432
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: coding-app-db-test
      DATABASE_URL: ${DATABASE_URL}
      TEST_DATABASE_URL: ${TEST_DATABASE_URL}
    # volumes:
    #   - ./server:/usr/src/app

  client:
    container_name: coding-app-client
    build:
      context: ./client
      dockerfile: Dockerfile.dev
    depends_on:
      - server
    volumes:
      - ./client:/usr/src/app
      - /usr/src/app/node_modules
    environment:
      VITE_BASE_URL: /api1

  nginx:
    image: nginx:1.27.1
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.dev.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - server
      - client

volumes:
  postgres_data:
