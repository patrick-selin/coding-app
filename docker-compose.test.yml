# docker-compose.test.yml
services:
  server:
    container_name: coding-app-server
    image: "${DOCKERHUB_USERNAME}/coding-app:server-${GITHUB_SHA}"
    depends_on:
      database-sql:
        condition: service_healthy
    restart: unless-stopped
    environment:
      NODE_ENV: test
      DATABASE_URL: ${DATABASE_URL}
      SERVER_PORT: ${SERVER_PORT}
      SERVER_HOST: ${SERVER_HOST}

  database-sql:
    container_name: coding-app-postgresql-db
    image: postgres:16.4-bullseye
    restart: unless-stopped
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 20s
      timeout: 5s
      retries: 5    

  client:
    container_name: coding-app-client
    image: "${DOCKERHUB_USERNAME}/coding-app:client-${GITHUB_SHA}"
    depends_on:
      - server
    environment:
      VITE_BASE_URL: ${VITE_BASE_URL} 
    expose:
      - "80"

  nginx:
    build:
      context: ./client 
      dockerfile: Dockerfile.prod
    container_name: reverse-proxy
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.prod.conf:/etc/nginx/nginx.conf:ro 
    depends_on:
      - server
      - client
    restart: unless-stopped

volumes:
  postgres_data:
